name: Build and Push Image

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build.yaml'
      - 'build/**'
  pull_request:
    paths:
      - '.github/workflows/build.yaml'
      - 'build/**'

env:
  DOCKER_REPO: ghcr.io/enucatl/docker-airflow
  DOCKER_REPO_DEV: ghcr.io/enucatl/docker-airflow-dev

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version
        id: version
        run: echo "version=$(cat build/VERSION)" >> $GITHUB_OUTPUT

      - name: Determine repository name
        id: repo
        run: |
          if [[ $GITHUB_REF == "refs/heads/main" ]]; then
            echo "repo=${{ env.DOCKER_REPO }}" >> $GITHUB_OUTPUT
          else
            echo "repo=${{ env.DOCKER_REPO_DEV }}" >> $GITHUB_OUTPUT
          fi

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.repo.outputs.repo }}
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}-${{ github.sha }}-build,prefix=,suffix=,enable=${{ steps.version.outputs.version != '' }}
            type=sha,prefix=,suffix=-build

      - name: Build and load image for scanning
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./build
          file: ./build/Dockerfile
          # Do not push here. Load it into the local docker daemon to be scanned.
          load: true
          # Tag the image with a predictable name for the scan step
          tags: ${{ steps.repo.outputs.repo }}:scan-candidate
          build-args: |
            AIRFLOW_VERSION=${{ steps.version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan image for vulnerabilities
        id: scan
        uses: anchore/scan-action@v3
        with:
          image: ${{ steps.repo.outputs.repo }}:scan-candidate
          fail-build: false
          severity-cutoff: critical

      - name: Upload vulnerability scan SARIF report
        uses: github/codeql-action/upload-sarif@v3
        # Always run this step, even if the previous one fails (e.g., vulnerabilities found)
        if: always()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Push image to GHCR
        # This step only runs for pushes to the main branch, not for pull requests.
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: ./build
          file: ./build/Dockerfile
          # Push is enabled for this step
          push: true
          # Use all the tags and labels generated by the metadata action
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            AIRFLOW_VERSION=${{ steps.version.outputs.version }}
          # Use the build cache from the previous build step for efficiency
          cache-from: type=gha
          cache-to: type=gha,mode=max
